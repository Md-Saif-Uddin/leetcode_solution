//  https://leetcode.com/problems/unique-paths/
class Solution {
    public int uniquePaths(int m, int n) {
        int[][] dp = new int[m][n];

        return paths(m,n,dp);
    }

    public int paths(int m,int n,int[][] dp){
        if(dp[m-1][n-1] != 0) return dp[m-1][n-1];
        int down = 0;
        int right = 0;

        if(m == 1 && n == 1){
            return 1;
        }
        if(m > 1){
            down = paths(m-1, n,dp);
        }
        if(n > 1){
            right = paths(m,n-1,dp);
        }
        dp[m-1][n-1]=down+right;
        return down+right;
    }
}
