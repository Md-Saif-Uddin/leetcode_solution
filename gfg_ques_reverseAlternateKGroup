// same as ques 25
//https://www.geeksforgeeks.org/reverse-alternate-k-nodes-in-a-singly-linked-list/
    public void reverseAlternateKGroup(int k) {
        if (k <= 1 || head == null) return;

        int len = findLength(head);
        int count = len / k;

        Node current = head;
        Node prev = null;


        while (count > 0) {
            Node last = prev;
            Node newEnd = current;
            Node next = current.next;

            for (int i = 0; current != null && i < k; i++) {
                current.next = prev;
                prev = current;
                current = next;
                if (next != null) {
                    next = next.next;
                }
            }

            if (last != null) {
                last.next = prev;
            } else {
                head = prev;
            }

            newEnd.next = current;
            prev = newEnd;
            for (int i = 0; current != null && i < k; i++) {
                prev = current;
                current = current.next;
            }
            count = count - 2;
        }

    }
