/*    https://leetcode.com/problems/determine-if-two-strings-are-close/description/?envType=study-plan-v2&envId=leetcode-75    */



class Solution:
    def closeStrings(self, word1: str, word2: str) -> bool:
        freq1 = [0] * 26
        freq2 = [0] * 26

        for ch in word1:
            freq1[ord(ch) - ord('a')] += 1

        for ch in word2:
            freq2[ord(ch) - ord('a')] += 1

        for i in range(26):
            if (freq1[i] == 0 and freq2[i] != 0) or (freq1[i] != 0 and freq2[i] == 0):
                return False

        freq1.sort()
        freq2.sort()

        for i in range(26):
            if freq1[i] != freq2[i]:
                return False

        return True


# class Solution {
#     public boolean closeStrings(String word1, String word2) {
#         int[] freq1 = new int[26];
#         int[] freq2 = new int[26];

#         for (char ch : word1.toCharArray()) {
#             freq1[ch - 'a']++;
#         }

#         for (char ch : word2.toCharArray()) {
#             freq2[ch - 'a']++;
#         }

#         for (int i = 0; i < 26; i++) {
#             if ((freq1[i] == 0 && freq2[i] != 0) || (freq1[i] != 0 && freq2[i] == 0)) {
#                 return false;
#             }
#         }

#         Arrays.sort(freq1);
#         Arrays.sort(freq2);

#         for (int i = 0; i < 26; i++) {
#             if (freq1[i] != freq2[i]) {
#                 return false;
#             }
#         }

#         return true;
#     }
# }

